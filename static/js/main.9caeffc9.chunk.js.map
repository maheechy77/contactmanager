{"version":3,"sources":["Context.js","container/Contacts/Contact.js","container/Contacts/Contacts.js","components/layout/Header.js","components/layout/Input.js","container/Add/Addcontact.js","container/Edit/Editcontact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","payload","concat","toConsumableArray","map","contact","id","filter","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_this2","axios","get","then","res","data","react_default","a","createElement","props","children","Component","Consumer","Contact","showData","onClick","Fragment","className","name","react_router_dom","to","onDeleteClick","phone","email","Contacts","_callee","regenerator_default","wrap","_context","prev","next","delete","t0","stop","Contacts_Contact","Header","href","branding","Input","InputType","classnames","is-invalid","error","Type","placeholder","onChange","rows","cols","options","option","displayValue","label","Addcontact","onSubmit","e","_this$state","newData","preventDefault","abrupt","console","log","post","sent","history","push","defineProperty","target","_this$state2","layout_Input","Editcontact","match","params","put","App","Context_Provider","basename","process","layout_Header","react_router","exact","path","component","AddContact","EditContact","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9caeffc9.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context=React.createContext();\r\n\r\nconst reducer=(state,action)=>{\r\n    switch(action.type){\r\n        case 'ADD_CONTACT':\r\n        return{\r\n            ...state,\r\n            contacts:[action.payload,\r\n                ...state.contacts\r\n            ]\r\n        };\r\n        case 'UPDATE_CONTACT':\r\n        return{\r\n            ...state,\r\n            contacts:state.contacts.map(\r\n                contact=>contact.id===action.payload.id\r\n                 ? (contact=action.payload): contact)\r\n            \r\n        };\r\n        case 'DELETE_CONTACT':\r\n        return{\r\n            ...state,\r\n            contacts:state.contacts.filter(contact=>contact.id!==action.payload)\r\n        };\r\n        default :return state;\r\n    }\r\n}\r\nexport class Provider extends Component {\r\n    state={\r\n        contacts:[],\r\n        dispatch:action=>this.setState(state=>reducer(state,action))\r\n    }\r\n    componentDidMount(){\r\n        axios.get('https://jsonplaceholder.typicode.com/users')\r\n        .then(res=>this.setState({contacts:res.data}));\r\n    }\r\n    render(){\r\n        return(\r\n            <Context.Provider value={this.state}>\r\n            {this.props.children}\r\n            </Context.Provider>)\r\n        ;\r\n    };\r\n};\r\nexport const Consumer=Context.Consumer;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Contacts.css'\r\n\r\nclass Contact extends Component {\r\n    state={\r\n        showData:false\r\n      }\r\n      onClick=()=>{\r\n        this.setState({showData:!this.state.showData})\r\n      }\r\n    render(){\r\n    const { id }=this.props;\r\n    return (\r\n    <React.Fragment>\r\n      <div className='card card-body mb-3' >\r\n        <h4 >{this.props.name}  <i onClick={this.onClick} className='fas fa-angle-down' >  </i> <Link to={`edit/${id}`}><i onClick={this.props.onDeleteClick}  className='fas fa-pen green' ></i></Link> <i onClick={this.props.onDeleteClick}  className='fas fa-times red' ></i></h4>\r\n        \r\n            {this.state.showData ? \r\n            <div>\r\n                <p className='list-group-item' >{this.props.phone}</p>\r\n                <p className='list-group-item' >{this.props.email}</p>\r\n            </div>    \r\n            :null}\r\n        \r\n      </div>\r\n      <br />\r\n    </React.Fragment>\r\n  )};\r\n};\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { Consumer } from '../../Context';\r\nimport Contact from './Contact';\r\n\r\nclass Contacts extends Component {\r\n  onDeleteClick=async (id,dispatch)=>{\r\n    try{\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      dispatch({type:'DELETE_CONTACT', payload:id});\r\n    }\r\n    catch(e){\r\n      dispatch({type:'DELETE_CONTACT', payload:id});\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className='container' >\r\n        <Consumer>\r\n        {value=>{\r\n          const { dispatch }=value;\r\n          return(\r\n            <React.Fragment>\r\n              {value.contacts.map(contact=>(\r\n                <Contact\r\n                key={contact.id}\r\n                id={contact.id}\r\n                name={contact.name}\r\n                email={contact.email}\r\n                phone={contact.phone}\r\n                onDeleteClick={()=>this.onDeleteClick(contact.id,dispatch)}\r\n                />\r\n              ))}\r\n            </React.Fragment>\r\n          )\r\n        }}\r\n        </Consumer>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    \r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-info mb-3 py-0\">\r\n      <div className='container' >\r\n        <a className=\"navbar-brand\" href=\"/\">{props.branding}</a>\r\n        <div>\r\n            <ul className=\"navbar-nav mr-auto\">\r\n                <li className='nav-item' ><Link className=\"nav-link\" to=\"/\">Home</Link></li>\r\n                <li className='nav-item' ><Link className=\"nav-link\" to=\"/addcontact\">Add Contacts</Link></li>\r\n                <li className='nav-item' ><Link className=\"nav-link\" to=\"#\">Pricing</Link></li>\r\n            </ul>\r\n          </div>  \r\n         </div> \r\n      </nav>\r\n    \r\n  )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\n\r\nconst Input = (props) => {\r\n    let Input=null;\r\n    switch (props.InputType){\r\n        case 'input':\r\n        Input=<input className={classnames('form-control form-control-sm col-sm-10',{'is-invalid':props.error})} type={props.Type} value={props.value} name={props.name} placeholder={props.placeholder} onChange={props.onChange} />;\r\n        break;\r\n        case 'textarea':\r\n        Input=<textarea className={classnames('form-control form-control-sm col-sm-10',{'is-invalid':props.error})} rows=\"4\" cols=\"50\"  placeholder={props.placeholder} name={props.name} onChange={props.onChange}>{props.value}</textarea>;\r\n        break;\r\n        case 'select':\r\n        Input=(<select className='form-control form-control-sm col-sm-10'>\r\n        {props.options.map(option=><option value={option.value}>{option.displayValue}</option>)}\r\n        </select>);\r\n        break;\r\n        default :\r\n        Input=<input className={classnames('form-control form-control-sm col-sm-10',{'is-invalid':props.error})} type='text' name={props.name} value={props.value} placeholder='Enter Default' />;\r\n        break; \r\n    }\r\n    return (\r\n    <div className='container' >\r\n        <div className='form-group row' >\r\n            <lable className='col-sm-2' ><b>{props.label}</b>:</lable>{Input}{props.error && <div className='invalid-feedback' >{props.error}</div>}\r\n        </div>  \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport Input from '../../components/layout/Input';\r\nimport { Consumer } from '../../Context';\r\n\r\nclass Addcontact extends Component {\r\n    state={\r\n        name:'',\r\n        email:'',\r\n        phone:'',\r\n        error:{}\r\n        /* for select input feild need the values of option in state\r\n        options:[\r\n            {value:'male', displayValue:'Male'},\r\n            {value:'female', displayValue:'Female'}\r\n        ]*/\r\n    }\r\n    onSubmit=async (dispatch,e)=>{\r\n        e.preventDefault();\r\n\r\n        const { name,phone,email }= this.state;\r\n        if(name===''){\r\n            this.setState({error:{name:'Name is Required!'}});\r\n            return;\r\n        }\r\n        if(email===''){\r\n            this.setState({error:{email:'Email is Required!'}});\r\n            return;\r\n        }\r\n        if(phone===''){\r\n            this.setState({error:{phone:'Phone is Required!'}});\r\n            return;\r\n        }\r\n        const newData={\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n        console.log(newData);\r\n        const res= await axios.post('https://jsonplaceholder.typicode.com/users',newData);\r\n        dispatch({type:'ADD_CONTACT' , payload:res.data});\r\n\r\n        this.props.history.push('/');\r\n        this.setState({\r\n            name:'',\r\n            email:'',\r\n            phone:'',\r\n            error:{}\r\n        });\r\n    }\r\n    onChange=(e) => {\r\n        this.setState({[e.target.name]:e.target.value});\r\n    }\r\n  render() {\r\n      const { name,phone,email,error }= this.state;\r\n    return (\r\n    <Consumer>\r\n        {value=>{\r\n            const { dispatch }=value;\r\n            return(\r\n                <div className='container' >\r\n                <div className='card'>\r\n                <div className='card-header'><h3>Add Contact</h3></div>\r\n                <div className='card-body'>\r\n                <form onSubmit={(e) => this.onSubmit(dispatch,e)}>\r\n                <Input \r\n                    label='Name'\r\n                    InputType='input'\r\n                    Type='text'\r\n                    placeholder='Enter Your Name'\r\n                    name='name'\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={error.name}\r\n                />\r\n                <Input \r\n                    label='Email'\r\n                    InputType='input'\r\n                    Type='text'\r\n                    placeholder='Enter Your Email'\r\n                    name='email'\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={error.email}\r\n                />\r\n                <Input \r\n                    label='Phone'\r\n                    InputType='input'\r\n                    Type='text'\r\n                    placeholder='Enter Your Phone'\r\n                    name='phone'\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={error.phone}\r\n                />\r\n                <input \r\n                    type='submit'\r\n                    value='Add Contact'\r\n                    className='form-control form-control-sm btn btn-success'\r\n                />\r\n            </form>    \r\n            </div>\r\n        </div>\r\n      </div>\r\n            );\r\n        }}      \r\n    </Consumer>\r\n    )\r\n  }\r\n};\r\nexport default Addcontact;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport Input from '../../components/layout/Input';\r\nimport { Consumer } from '../../Context';\r\n\r\nclass Editcontact extends Component {\r\n    state={\r\n        name:'',\r\n        email:'',\r\n        phone:'',\r\n        error:{}\r\n        /* for select input feild need the values of option in state\r\n        options:[\r\n            {value:'male', displayValue:'Male'},\r\n            {value:'female', displayValue:'Female'}\r\n        ]*/\r\n    }\r\n    async componentDidMount(){\r\n        const { id }=this.props.match.params;\r\n        const res =await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        const contact=res.data;\r\n        this.setState({\r\n            name:contact.name,\r\n            email:contact.email,\r\n            phone:contact.phone\r\n        })\r\n    }\r\n    onSubmit=async (dispatch,e)=>{\r\n        e.preventDefault();\r\n\r\n        const { id }=this.props.match.params;\r\n        const { name,phone,email }= this.state;\r\n        if(name===''){\r\n            this.setState({error:{name:'Name is Required!'}});\r\n            return;\r\n        }\r\n        if(email===''){\r\n            this.setState({error:{email:'Email is Required!'}});\r\n            return;\r\n        }\r\n        if(phone===''){\r\n            this.setState({error:{phone:'Phone is Required!'}});\r\n            return;\r\n        }\r\n        const newData={\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n        const res= await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`,newData);\r\n        dispatch({type:'UPDATE_CONTACT' , payload:res.data});\r\n\r\n        this.props.history.push('/');\r\n        this.setState({\r\n            name:'',\r\n            email:'',\r\n            phone:'',\r\n            error:{}\r\n        });\r\n    }\r\n    onChange=(e) => {\r\n        this.setState({[e.target.name]:e.target.value});\r\n    }\r\n  render() {\r\n      const { name,phone,email,error }= this.state;\r\n    return (\r\n    <Consumer>\r\n        {value=>{\r\n            const { dispatch }=value;\r\n            return(\r\n                <div className='container' >\r\n                <div className='card'>\r\n                <div className='card-header'><h3>Add Contact</h3></div>\r\n                <div className='card-body'>\r\n                <form onSubmit={(e) => this.onSubmit(dispatch,e)}>\r\n                <Input \r\n                    label='Name'\r\n                    InputType='input'\r\n                    Type='text'\r\n                    placeholder='Enter Your Name'\r\n                    name='name'\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={error.name}\r\n                />\r\n                <Input \r\n                    label='Email'\r\n                    InputType='input'\r\n                    Type='text'\r\n                    placeholder='Enter Your Email'\r\n                    name='email'\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={error.email}\r\n                />\r\n                <Input \r\n                    label='Phone'\r\n                    InputType='input'\r\n                    Type='text'\r\n                    placeholder='Enter Your Phone'\r\n                    name='phone'\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={error.phone}\r\n                />\r\n                <input \r\n                    type='submit'\r\n                    value='Edit Contact'\r\n                    className='form-control form-control-sm btn btn-success'\r\n                />\r\n            </form>    \r\n            </div>\r\n        </div>\r\n      </div>\r\n            );\r\n        }}      \r\n    </Consumer>\r\n    )\r\n  }\r\n};\r\nexport default Editcontact;","import React, { Component } from 'react';\nimport {BrowserRouter , Route, Switch} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css';\n\nimport {Provider} from './Context';\nimport Contacts from './container/Contacts/Contacts';\nimport Header from './components/layout/Header';\nimport AddContact from './container/Add/Addcontact';\nimport EditContact from './container/Edit/Editcontact';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n          <BrowserRouter basename={process.env.PUBLIC_URL} >\n            <div className=\"App\">\n              <div className='container' >\n                <Header branding='Contact Manager' />\n                <Switch>\n                  <Route exact path='/' component={Contacts} />\n                  <Route exact path='/addcontact' component={AddContact} /> \n                  <Route exact path='/edit/:id' component={EditContact}/>\n                </Switch>\n              </div>\n            </div>\n        </BrowserRouter> \n      </Provider>  \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}